Title: **WordPress Core Media Library XXE Vulnerability #1**

**Attack Vector**
This vulnerability in WordPress is exploited using a XXE (XML External Entity) vulnerability in the WordPress Core Media Library, which takes advantage of the insecure parsing of XML content while running on PHP 8. An authenticated attacker can upload a malicious .wav file to exploit this vulnerability. The researcher found this vulnerability through code analysis of the WordPress core commit `https://github.com/WordPress/WordPress/commit/03eba7beb2f5b96bd341255eaa30d6b612e62507` and physical testing.

**Exploitation Technique**
To exploit this vulnerability, an attacker must meet several conditions:

1. The attacker must have the privileges of at least an *author* user on WordPress 5.6 installed on PHP 8.
2. The attacker needs access to a web server from which leaked data can be retrieved.

The steps to reproduce the exploit are as follows:

1. Modify the address in the 2 files contained in the proof of concept (PoC) archive provided in the report, to point to the attackerâ€™s controlled web server.
2. Modify the address at `0x000338CD` in the .wav file using a hex editor.
3. Place the *xxe.dtd* file at the root of the attacker-controlled web server.
4. The attacker should then login as an *author* on WordPress and upload *xxe.wav* in the media library.
5. The content of */etc/passwd* will appear in the base64 encoded access logs on the attacker-controlled web server.

**Vulnerable Code**

The code vulnerable to this exploit involves the deprecated PHP function `libxml_disable_entity_loader()`. As of PHP 8.0, external entity loading, which is marked by the `LIBXML_NOENT` flag, is disabled by default. The vulnerability occurs when the user's input, as part of the `$XMLstring` variable, reaches a point where XXE can be initiated. This is due to the unintended activation of entity substitution by the `LIBXML_NOENT` flag.

**Impact**
The attacker is able to perform the following actions:
- Read secret system files.
- Engage in a Denial-of-Service attack against the web server.
- Execute Server-Side Request Forgery (SSRF) attacks.
- Trigger a Phar Deserialization attack, leading to further vulnerabilities.

**Related Research Terms**
- OWASP Top 10: A1-Injection, A3-XML External Entities (XXE), A4-Security Misconfiguration
- CWE: CWE-611- Improper Restriction of XML External Entity Reference
- CVE: N/A

